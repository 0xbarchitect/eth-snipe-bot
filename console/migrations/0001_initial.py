# Generated by Django 5.0.6 on 2024-08-03 02:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Block",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("block_number", models.BigIntegerField(unique=True)),
                ("block_timestamp", models.BigIntegerField(default=0, null=True)),
                ("base_fee", models.BigIntegerField(default=0, null=True)),
                ("gas_used", models.BigIntegerField(default=0, null=True)),
                ("gas_limit", models.BigIntegerField(default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.IntegerField(default=0, null=True)),
            ],
            options={
                "db_table": "block",
            },
        ),
        migrations.CreateModel(
            name="Pair",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("address", models.CharField(max_length=42, unique=True)),
                ("token", models.CharField(max_length=42)),
                ("token_index", models.IntegerField(default=0, null=True)),
                ("reserve_token", models.FloatField(default=0, null=True)),
                ("reserve_eth", models.FloatField(default=0, null=True)),
                ("deployed_at", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.IntegerField(default=0, null=True)),
            ],
            options={
                "db_table": "pair",
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("amount", models.FloatField(default=0, null=True)),
                ("buy_price", models.FloatField(default=0, null=True)),
                ("purchased_at", models.DateTimeField(null=True)),
                ("is_liquidated", models.IntegerField(default=0, null=True)),
                ("sell_price", models.FloatField(default=0, null=True)),
                ("liquidation_attempts", models.IntegerField(default=0, null=True)),
                ("pnl", models.FloatField(default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.IntegerField(default=0, null=True)),
                (
                    "pair",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="console.pair",
                    ),
                ),
            ],
            options={
                "db_table": "position",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("tx_hash", models.CharField(max_length=66, unique=True)),
                ("sender", models.CharField(max_length=42, null=True)),
                ("to", models.CharField(max_length=42, null=True)),
                ("value", models.FloatField(default=0, null=True)),
                ("gas_limit", models.FloatField(default=0, null=True)),
                ("max_priority_fee_per_gas", models.FloatField(default=0, null=True)),
                ("max_fee_per_gas", models.FloatField(default=0, null=True)),
                ("status", models.IntegerField(default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.IntegerField(default=0, null=True)),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="console.block",
                    ),
                ),
            ],
            options={
                "db_table": "transaction",
            },
        ),
        migrations.CreateModel(
            name="PositionTransaction",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("is_buy", models.IntegerField(default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.IntegerField(default=0, null=True)),
                (
                    "position",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="console.position",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="console.transaction",
                    ),
                ),
            ],
            options={
                "db_table": "position_transaction",
            },
        ),
        migrations.CreateModel(
            name="WatchingList",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.IntegerField(default=0, null=True)),
                (
                    "pair",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="console.pair",
                    ),
                ),
            ],
            options={
                "db_table": "watching_list",
            },
        ),
    ]
